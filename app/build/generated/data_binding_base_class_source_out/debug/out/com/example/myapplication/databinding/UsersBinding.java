// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UsersBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final AppCompatTextView age;

  @NonNull
  public final AppCompatTextView code;

  @NonNull
  public final AppCompatButton delete;

  @NonNull
  public final AppCompatTextView lastName;

  @NonNull
  public final AppCompatTextView phone;

  @NonNull
  public final AppCompatTextView username;

  private UsersBinding(@NonNull CardView rootView, @NonNull AppCompatTextView age,
      @NonNull AppCompatTextView code, @NonNull AppCompatButton delete,
      @NonNull AppCompatTextView lastName, @NonNull AppCompatTextView phone,
      @NonNull AppCompatTextView username) {
    this.rootView = rootView;
    this.age = age;
    this.code = code;
    this.delete = delete;
    this.lastName = lastName;
    this.phone = phone;
    this.username = username;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static UsersBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UsersBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.users, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UsersBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.age;
      AppCompatTextView age = ViewBindings.findChildViewById(rootView, id);
      if (age == null) {
        break missingId;
      }

      id = R.id.code;
      AppCompatTextView code = ViewBindings.findChildViewById(rootView, id);
      if (code == null) {
        break missingId;
      }

      id = R.id.delete;
      AppCompatButton delete = ViewBindings.findChildViewById(rootView, id);
      if (delete == null) {
        break missingId;
      }

      id = R.id.lastName;
      AppCompatTextView lastName = ViewBindings.findChildViewById(rootView, id);
      if (lastName == null) {
        break missingId;
      }

      id = R.id.phone;
      AppCompatTextView phone = ViewBindings.findChildViewById(rootView, id);
      if (phone == null) {
        break missingId;
      }

      id = R.id.username;
      AppCompatTextView username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      return new UsersBinding((CardView) rootView, age, code, delete, lastName, phone, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
