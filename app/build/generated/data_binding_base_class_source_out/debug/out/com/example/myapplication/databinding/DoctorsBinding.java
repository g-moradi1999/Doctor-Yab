// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DoctorsBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final AppCompatButton appointment;

  @NonNull
  public final AppCompatTextView city;

  @NonNull
  public final CircleImageView doctorProfile;

  @NonNull
  public final AppCompatButton reserved;

  @NonNull
  public final AppCompatButton seeComments;

  @NonNull
  public final AppCompatTextView specialtyDoctors;

  @NonNull
  public final AppCompatTextView username;

  private DoctorsBinding(@NonNull CardView rootView, @NonNull AppCompatButton appointment,
      @NonNull AppCompatTextView city, @NonNull CircleImageView doctorProfile,
      @NonNull AppCompatButton reserved, @NonNull AppCompatButton seeComments,
      @NonNull AppCompatTextView specialtyDoctors, @NonNull AppCompatTextView username) {
    this.rootView = rootView;
    this.appointment = appointment;
    this.city = city;
    this.doctorProfile = doctorProfile;
    this.reserved = reserved;
    this.seeComments = seeComments;
    this.specialtyDoctors = specialtyDoctors;
    this.username = username;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static DoctorsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DoctorsBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.doctors, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DoctorsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appointment;
      AppCompatButton appointment = ViewBindings.findChildViewById(rootView, id);
      if (appointment == null) {
        break missingId;
      }

      id = R.id.city;
      AppCompatTextView city = ViewBindings.findChildViewById(rootView, id);
      if (city == null) {
        break missingId;
      }

      id = R.id.doctorProfile;
      CircleImageView doctorProfile = ViewBindings.findChildViewById(rootView, id);
      if (doctorProfile == null) {
        break missingId;
      }

      id = R.id.reserved;
      AppCompatButton reserved = ViewBindings.findChildViewById(rootView, id);
      if (reserved == null) {
        break missingId;
      }

      id = R.id.see_comments;
      AppCompatButton seeComments = ViewBindings.findChildViewById(rootView, id);
      if (seeComments == null) {
        break missingId;
      }

      id = R.id.specialty_doctors;
      AppCompatTextView specialtyDoctors = ViewBindings.findChildViewById(rootView, id);
      if (specialtyDoctors == null) {
        break missingId;
      }

      id = R.id.username;
      AppCompatTextView username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      return new DoctorsBinding((CardView) rootView, appointment, city, doctorProfile, reserved,
          seeComments, specialtyDoctors, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
