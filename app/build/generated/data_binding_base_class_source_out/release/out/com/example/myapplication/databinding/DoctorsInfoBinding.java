// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DoctorsInfoBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AppCompatTextView address;

  @NonNull
  public final AppCompatTextView city;

  @NonNull
  public final AppCompatTextView day;

  @NonNull
  public final AppCompatTextView phonenumber;

  @NonNull
  public final AppCompatTextView specialtyDoctors;

  @NonNull
  public final AppCompatTextView username;

  private DoctorsInfoBinding(@NonNull RelativeLayout rootView, @NonNull AppCompatTextView address,
      @NonNull AppCompatTextView city, @NonNull AppCompatTextView day,
      @NonNull AppCompatTextView phonenumber, @NonNull AppCompatTextView specialtyDoctors,
      @NonNull AppCompatTextView username) {
    this.rootView = rootView;
    this.address = address;
    this.city = city;
    this.day = day;
    this.phonenumber = phonenumber;
    this.specialtyDoctors = specialtyDoctors;
    this.username = username;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DoctorsInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DoctorsInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.doctors_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DoctorsInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.address;
      AppCompatTextView address = ViewBindings.findChildViewById(rootView, id);
      if (address == null) {
        break missingId;
      }

      id = R.id.city;
      AppCompatTextView city = ViewBindings.findChildViewById(rootView, id);
      if (city == null) {
        break missingId;
      }

      id = R.id.day;
      AppCompatTextView day = ViewBindings.findChildViewById(rootView, id);
      if (day == null) {
        break missingId;
      }

      id = R.id.phonenumber;
      AppCompatTextView phonenumber = ViewBindings.findChildViewById(rootView, id);
      if (phonenumber == null) {
        break missingId;
      }

      id = R.id.specialty_doctors;
      AppCompatTextView specialtyDoctors = ViewBindings.findChildViewById(rootView, id);
      if (specialtyDoctors == null) {
        break missingId;
      }

      id = R.id.username;
      AppCompatTextView username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      return new DoctorsInfoBinding((RelativeLayout) rootView, address, city, day, phonenumber,
          specialtyDoctors, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
